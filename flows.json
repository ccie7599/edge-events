[
    {
        "id": "5f8937d2bf1fe3b6",
        "type": "tab",
        "label": "Set GeoIP ",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5d71f4dcae6e888c",
        "type": "tab",
        "label": "Broadcast Cash and Position Balances",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddaea7293bc64d2e",
        "type": "tab",
        "label": "Price and Call/Put Price Injection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cdc1f90a18705388",
        "type": "tab",
        "label": "Cash and Positions Processing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b9fe1706e10bbbd9",
        "type": "tab",
        "label": "Order Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20146b04c8e6e589",
        "type": "tab",
        "label": "Simulate Orders",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2603a383d6b1e7d9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.17.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "838c10f9d3dbf441",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "09ca0e3032db3e0d",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7821203aa2670ff3",
        "type": "ui_group",
        "name": "Default",
        "tab": "838c10f9d3dbf441",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "77ca465d2499cef7",
        "type": "NATS JetStream Server",
        "server": "172.17.0.1",
        "port": "4222"
    },
    {
        "id": "2c11327dd23e3346",
        "type": "NATS JetStream Stream",
        "name": "",
        "stream": "order",
        "description": "",
        "subjects": "order",
        "max_msgs": "-1",
        "max_age": "",
        "max_ageunit": "second",
        "max_size": "-1",
        "max_sizeunit": "mb",
        "num_replicas": "1"
    },
    {
        "id": "03ce641126b3a8b5",
        "type": "NATS JetStream Stream",
        "name": "",
        "stream": "positions",
        "description": "",
        "subjects": "positions.>",
        "max_msgs": "-1",
        "max_age": "",
        "max_ageunit": "second",
        "max_size": "-1",
        "max_sizeunit": "mb",
        "num_replicas": "1"
    },
    {
        "id": "c368c329fef47646",
        "type": "NATS JetStream Stream",
        "name": "",
        "stream": "cash",
        "description": "",
        "subjects": "cash.>",
        "max_msgs": "-1",
        "max_age": "",
        "max_ageunit": "second",
        "max_size": "-1",
        "max_sizeunit": "mb",
        "num_replicas": "1"
    },
    {
        "id": "dad2c6e97b3f397f",
        "type": "NATS JetStream Stream",
        "name": "",
        "stream": "enter",
        "description": "",
        "subjects": "enter",
        "max_msgs": "-1",
        "max_age": "",
        "max_ageunit": "second",
        "max_size": "-1",
        "max_sizeunit": "mb",
        "num_replicas": "1"
    },
    {
        "id": "4c887660b8bc7b81",
        "type": "http request",
        "z": "5f8937d2bf1fe3b6",
        "name": "Lookup public IP address",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "wgetip.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "f5c28960156e248e"
            ]
        ]
    },
    {
        "id": "f5c28960156e248e",
        "type": "template",
        "z": "5f8937d2bf1fe3b6",
        "name": "Format GeoIP Lookup",
        "field": "url",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "http://ip-api.com/json/{{payload}}",
        "output": "str",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "2d99faed21d621ce"
            ]
        ]
    },
    {
        "id": "2d99faed21d621ce",
        "type": "http request",
        "z": "5f8937d2bf1fe3b6",
        "name": "GeoIP Lookup",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "d9e2f02fb329b433"
            ]
        ]
    },
    {
        "id": "d9e2f02fb329b433",
        "type": "change",
        "z": "5f8937d2bf1fe3b6",
        "name": "Set Global Variables ",
        "rules": [
            {
                "t": "set",
                "p": "regionName",
                "pt": "global",
                "to": "payload.regionName",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "countryCode",
                "pt": "global",
                "to": "payload.countryCode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "org",
                "pt": "global",
                "to": "payload.org",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "city",
                "pt": "global",
                "to": "payload.city",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lat",
                "pt": "global",
                "to": "payload.lat",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "lon",
                "pt": "global",
                "to": "payload.lon",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ip",
                "pt": "global",
                "to": "payload.query",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c1438b96b03583c7",
        "type": "inject",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 20,
        "wires": [
            [
                "4c887660b8bc7b81"
            ]
        ]
    },
    {
        "id": "3187a9126367ab93",
        "type": "http in",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "url": "/get",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1000,
        "y": 40,
        "wires": [
            [
                "a4dc91431fb2b82a"
            ]
        ]
    },
    {
        "id": "f2473e8bdd9aaffb",
        "type": "http response",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "a4dc91431fb2b82a",
        "type": "change",
        "z": "5f8937d2bf1fe3b6",
        "name": "save req and res",
        "rules": [
            {
                "t": "set",
                "p": "req",
                "pt": "flow",
                "to": "req",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "res",
                "pt": "flow",
                "to": "res",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "0a42817dc9b0f7a4"
            ]
        ]
    },
    {
        "id": "68d8ca0abeac9b81",
        "type": "file",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 820,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "0a42817dc9b0f7a4",
        "type": "template",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/kv/{{{payload.topic}}}",
        "output": "str",
        "x": 1020,
        "y": 120,
        "wires": [
            [
                "a4f2a3e96d2f6bd4"
            ]
        ]
    },
    {
        "id": "a4f2a3e96d2f6bd4",
        "type": "file in",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1020,
        "y": 160,
        "wires": [
            [
                "b0539d401715f5ef"
            ]
        ]
    },
    {
        "id": "d1f0beb32eb4c4e0",
        "type": "template",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/kv/{{{topic}}}",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "68d8ca0abeac9b81"
            ]
        ]
    },
    {
        "id": "b0539d401715f5ef",
        "type": "change",
        "z": "5f8937d2bf1fe3b6",
        "name": "get req, res",
        "rules": [
            {
                "t": "set",
                "p": "req",
                "pt": "msg",
                "to": "req",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "res",
                "pt": "msg",
                "to": "res",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "f2473e8bdd9aaffb"
            ]
        ]
    },
    {
        "id": "c1e5078e451d7ae2",
        "type": "http in",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "url": "/post",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "06e0f06e44a0b54c",
                "d4b3aa8c02345f5d"
            ]
        ]
    },
    {
        "id": "d4b3aa8c02345f5d",
        "type": "http response",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "0d788ec3177edabd",
        "type": "mqtt in",
        "z": "5f8937d2bf1fe3b6",
        "d": true,
        "name": "",
        "topic": "#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "2603a383d6b1e7d9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 80,
        "wires": [
            [
                "55b69edfc50207f9"
            ]
        ]
    },
    {
        "id": "db770af7e154f765",
        "type": "mqtt out",
        "z": "5f8937d2bf1fe3b6",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2603a383d6b1e7d9",
        "x": 710,
        "y": 60,
        "wires": []
    },
    {
        "id": "197cbb8769217678",
        "type": "inject",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "props": [
            {
                "p": "payload.timestamp",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.publishcity",
                "v": "city",
                "vt": "global"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "timestamp",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "db770af7e154f765"
            ]
        ]
    },
    {
        "id": "06e0f06e44a0b54c",
        "type": "change",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "req.query.topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "db770af7e154f765"
            ]
        ]
    },
    {
        "id": "55b69edfc50207f9",
        "type": "switch",
        "z": "5f8937d2bf1fe3b6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "timestamp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "order",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "positions",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 450,
        "y": 40,
        "wires": [
            [
                "d1f0beb32eb4c4e0"
            ],
            [],
            [],
            [
                "d1f0beb32eb4c4e0"
            ]
        ]
    },
    {
        "id": "a0200dabd182a4d4",
        "type": "link out",
        "z": "5f8937d2bf1fe3b6",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "bac7a7ef3b7cd4df"
        ],
        "x": 655,
        "y": 360,
        "wires": []
    },
    {
        "id": "11991134ad3a9f6b",
        "type": "inject",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 670,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "df352aeb04137f06",
        "type": "fs-file-lister",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "start": "/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": false,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 340,
        "y": 340,
        "wires": [
            [
                "e11c43487502fe2d"
            ]
        ]
    },
    {
        "id": "83865b96673d6a46",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"start\":\"/db/positions\",\"pattern\":\"{{payload.id}}\",\"files\":\"!context\"}",
        "output": "json",
        "x": 200,
        "y": 400,
        "wires": [
            [
                "df352aeb04137f06"
            ]
        ]
    },
    {
        "id": "dfb74b8f46a6fd72",
        "type": "file in",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "500b454f13cd5a71"
            ]
        ]
    },
    {
        "id": "500b454f13cd5a71",
        "type": "json",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "c7a26e46dfc31e8e"
            ]
        ]
    },
    {
        "id": "c7a26e46dfc31e8e",
        "type": "switch",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "property": "payload.callorput",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "call",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "put",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "9122e9e653c64fd6"
            ],
            [
                "29f94074758853f4"
            ]
        ]
    },
    {
        "id": "5ddb2022d0809ca9",
        "type": "function",
        "z": "5d71f4dcae6e888c",
        "name": "CallPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesCallPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var callPrice = S * normcdf(d1) - K * Math.exp(-r * T) * normcdf(d2);\n    return callPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar callPrice = blackScholesCallPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { callPrice: callPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 120,
        "wires": [
            [
                "aed93a2afe92b189"
            ]
        ]
    },
    {
        "id": "4dc3a36767e93b9c",
        "type": "function",
        "z": "5d71f4dcae6e888c",
        "name": "PutPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesPutPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var putPrice = K * Math.exp(-r * T) * normcdf(-d2) - S * normcdf(-d1);\n    return putPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar putPrice = blackScholesPutPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { putPrice: putPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 160,
        "wires": [
            [
                "8456dd6b8ef12380"
            ]
        ]
    },
    {
        "id": "9122e9e653c64fd6",
        "type": "change",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.riskFreeRate",
                "pt": "msg",
                "to": ".05",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.volatility",
                "pt": "msg",
                "to": ".25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.term",
                "pt": "msg",
                "to": ".125",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "strikePrice",
                "pt": "msg",
                "to": "payload.strikePrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "costbasis",
                "pt": "msg",
                "to": "payload.callPrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "quotedPrice",
                "pt": "msg",
                "to": "payload.currentPrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 120,
        "wires": [
            [
                "5ddb2022d0809ca9"
            ]
        ]
    },
    {
        "id": "29f94074758853f4",
        "type": "change",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.riskFreeRate",
                "pt": "msg",
                "to": ".05",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.volatility",
                "pt": "msg",
                "to": ".25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.term",
                "pt": "msg",
                "to": ".125",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "strikePrice",
                "pt": "msg",
                "to": "payload.strikePrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "costbasis",
                "pt": "msg",
                "to": "payload.putPrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "quotedPrice",
                "pt": "msg",
                "to": "payload.currentPrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 180,
        "wires": [
            [
                "4dc3a36767e93b9c"
            ]
        ]
    },
    {
        "id": "8456dd6b8ef12380",
        "type": "change",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "strikePrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "announce",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.callorput",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.costbasis",
                "pt": "msg",
                "to": "costbasis",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.quotedPrice",
                "pt": "msg",
                "to": "quotedPrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 260,
        "wires": [
            [
                "002894801fd243ba"
            ]
        ]
    },
    {
        "id": "aed93a2afe92b189",
        "type": "change",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "strikePrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "announce",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.callorput",
                "pt": "msg",
                "to": "call",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.costbasis",
                "pt": "msg",
                "to": "costbasis",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.quotedPrice",
                "pt": "msg",
                "to": "quotedPrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "002894801fd243ba"
            ]
        ]
    },
    {
        "id": "06b96b5adb7303f6",
        "type": "NATS JetStream Publish",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "server": "77ca465d2499cef7",
        "subject": "",
        "payloadType": "json",
        "x": 1350,
        "y": 400,
        "wires": []
    },
    {
        "id": "7baf9d9a3b6fa84e",
        "type": "NATS JetStream Consumer",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "server": "77ca465d2499cef7",
        "subjects": "enter",
        "delivery": "all",
        "stream": "ensure",
        "ensurestream": "dad2c6e97b3f397f",
        "consumertype": "durable",
        "durable": "enter-durable",
        "startseq": 0,
        "starttime": 0,
        "ack": "auto",
        "maxackpending": 2000,
        "ackwait": 10000,
        "maxworkerpending": 1000,
        "maxdeliver": -1,
        "payloadType": "json",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "ea38c83958f8b681"
            ]
        ]
    },
    {
        "id": "ea38c83958f8b681",
        "type": "function",
        "z": "5d71f4dcae6e888c",
        "name": "function 12",
        "func": "// Check if msg.payload and msg.payload.data exist and are objects\nif (msg.payload && msg.payload.data && typeof msg.payload.data === 'object') {\n    // Copy properties from msg.payload.data to msg.payload\n    for (let key in msg.payload.data) {\n        if (msg.payload.data.hasOwnProperty(key)) {\n            msg.payload[key] = msg.payload.data[key];\n        }\n    }\n    // Remove the original data object from msg.payload\n    delete msg.payload.data;\n} else {\n    node.error(\"msg.payload.data is not an object\", msg);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 480,
        "wires": [
            [
                "6706a88493626059",
                "83865b96673d6a46"
            ]
        ]
    },
    {
        "id": "6706a88493626059",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/cash/{{payload.id}}",
        "output": "str",
        "x": 660,
        "y": 540,
        "wires": [
            [
                "217189c677261848"
            ]
        ]
    },
    {
        "id": "217189c677261848",
        "type": "file in",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 800,
        "y": 600,
        "wires": [
            [
                "6d0b1f7e5c7c08cc"
            ]
        ]
    },
    {
        "id": "6d0b1f7e5c7c08cc",
        "type": "json",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 990,
        "y": 600,
        "wires": [
            [
                "37cd697adf11260f"
            ]
        ]
    },
    {
        "id": "37cd697adf11260f",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "subject",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "cash.{{payload.user}}",
        "output": "str",
        "x": 1160,
        "y": 600,
        "wires": [
            [
                "06b96b5adb7303f6"
            ]
        ]
    },
    {
        "id": "002894801fd243ba",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"message\":\"{{payload.user}} holding {{payload.callorput}} at {{payload.strikePrice}} cost {{payload.costbasis}}\"}",
        "output": "json",
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "98376d679b0d50ea"
            ]
        ]
    },
    {
        "id": "98376d679b0d50ea",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "subject",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "positionsannounce.{{user}}",
        "output": "str",
        "x": 1320,
        "y": 280,
        "wires": [
            [
                "06b96b5adb7303f6"
            ]
        ]
    },
    {
        "id": "e11c43487502fe2d",
        "type": "switch",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Empty Folder",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "4c41fa9786b9d666"
            ],
            [
                "dfb74b8f46a6fd72"
            ]
        ]
    },
    {
        "id": "f46c7f9b03e263fc",
        "type": "NATS JetStream Consumer",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "server": "77ca465d2499cef7",
        "subjects": "positions.>",
        "delivery": "all",
        "stream": "ensure",
        "ensurestream": "03ce641126b3a8b5",
        "consumertype": "durable",
        "durable": "positionsdurable",
        "startseq": 0,
        "starttime": 0,
        "ack": "auto",
        "maxackpending": 2000,
        "ackwait": 10000,
        "maxworkerpending": 1000,
        "maxdeliver": -1,
        "payloadType": "json",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "ddb6c9862f3323b2"
            ]
        ]
    },
    {
        "id": "7e06e1847072833a",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"start\":\"/db/positions\",\"pattern\":\"{{payload.data.user}}\",\"files\":\"!context\"}",
        "output": "json",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "df352aeb04137f06"
            ]
        ]
    },
    {
        "id": "ddb6c9862f3323b2",
        "type": "delay",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "7e06e1847072833a"
            ]
        ]
    },
    {
        "id": "4c41fa9786b9d666",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"message\":\"No Position\"}",
        "output": "json",
        "x": 840,
        "y": 360,
        "wires": [
            [
                "f7b404a708ca8000"
            ]
        ]
    },
    {
        "id": "f7b404a708ca8000",
        "type": "template",
        "z": "5d71f4dcae6e888c",
        "name": "",
        "field": "subject",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "positionsannounce.{{config.pattern}}",
        "output": "str",
        "x": 1020,
        "y": 380,
        "wires": [
            [
                "06b96b5adb7303f6"
            ]
        ]
    },
    {
        "id": "a25e6e8ef180019e",
        "type": "inject",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "250",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "a2922744ea0eb505"
            ]
        ]
    },
    {
        "id": "a2922744ea0eb505",
        "type": "file in",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "filename": "/db/marketdata",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "c869068a849d9876"
            ]
        ]
    },
    {
        "id": "c869068a849d9876",
        "type": "delay",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "6e53e5037fa912cf"
            ]
        ]
    },
    {
        "id": "6e53e5037fa912cf",
        "type": "change",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 180,
        "wires": [
            [
                "ef4865ded2eeced6",
                "f2173cd7525a639b",
                "0e9a3046b1c15512",
                "36ed55075d8384fc"
            ]
        ]
    },
    {
        "id": "36ed55075d8384fc",
        "type": "mqtt out",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "topic": "price",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2603a383d6b1e7d9",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "0e9a3046b1c15512",
        "type": "ui_chart",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "group": "7821203aa2670ff3",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "170",
        "ymax": "250",
        "removeOlder": 1,
        "removeOlderPoints": "250",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f2173cd7525a639b",
        "type": "template",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"currentprice\":{{payload}}}",
        "output": "json",
        "x": 880,
        "y": 180,
        "wires": [
            [
                "068dcb20abdb801e"
            ]
        ]
    },
    {
        "id": "ef4865ded2eeced6",
        "type": "change",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "price",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "068dcb20abdb801e",
        "type": "join",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "99d3a2a0930f1f63"
            ]
        ]
    },
    {
        "id": "86b858c17efe2425",
        "type": "change",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "85e112d2d022533b",
                "51d0990b8434e37a"
            ]
        ]
    },
    {
        "id": "51d0990b8434e37a",
        "type": "function",
        "z": "ddaea7293bc64d2e",
        "name": "CallPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesCallPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var callPrice = S * normcdf(d1) - K * Math.exp(-r * T) * normcdf(d2);\n    return callPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar callPrice = blackScholesCallPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { callPrice: callPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 140,
        "wires": [
            [
                "068dcb20abdb801e"
            ]
        ]
    },
    {
        "id": "85e112d2d022533b",
        "type": "function",
        "z": "ddaea7293bc64d2e",
        "name": "PutPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesPutPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var putPrice = K * Math.exp(-r * T) * normcdf(-d2) - S * normcdf(-d1);\n    return putPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar putPrice = blackScholesPutPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { putPrice: putPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "068dcb20abdb801e"
            ]
        ]
    },
    {
        "id": "26f444a6d4d176ad",
        "type": "http in",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "url": "/sse",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 60,
        "wires": [
            [
                "99d3a2a0930f1f63"
            ]
        ]
    },
    {
        "id": "99d3a2a0930f1f63",
        "type": "sse-server",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "event": "message",
        "data": "",
        "x": 1010,
        "y": 60,
        "wires": []
    },
    {
        "id": "16c6432ce8819d3f",
        "type": "inject",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "props": [
            {
                "p": "payload.riskFreeRate",
                "v": ".05",
                "vt": "num"
            },
            {
                "p": "payload.volatility",
                "v": ".25",
                "vt": "num"
            },
            {
                "p": "payload.term",
                "v": ".125",
                "vt": "num"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "86b858c17efe2425"
            ]
        ]
    },
    {
        "id": "2ff6ecad410024b8",
        "type": "NATS JetStream Consumer",
        "z": "ddaea7293bc64d2e",
        "name": "",
        "server": "77ca465d2499cef7",
        "subjects": "cash.>",
        "delivery": "all",
        "stream": "ensure",
        "ensurestream": "c368c329fef47646",
        "consumertype": "durable",
        "durable": "cashdurable",
        "startseq": 0,
        "starttime": 0,
        "ack": "auto",
        "maxackpending": 2000,
        "ackwait": 10000,
        "maxworkerpending": "",
        "maxdeliver": -1,
        "payloadType": "json",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "3294cb078fcdd392"
            ]
        ]
    },
    {
        "id": "3294cb078fcdd392",
        "type": "function",
        "z": "ddaea7293bc64d2e",
        "name": "function 11",
        "func": "// Check if msg.payload and msg.payload.data exist and are objects\nif (msg.payload && msg.payload.data && typeof msg.payload.data === 'object') {\n    // Copy properties from msg.payload.data to msg.payload\n    for (let key in msg.payload.data) {\n        if (msg.payload.data.hasOwnProperty(key)) {\n            msg.payload[key] = msg.payload.data[key];\n        }\n    }\n    // Remove the original data object from msg.payload\n    delete msg.payload.data;\n} else {\n    node.error(\"msg.payload.data is not an object\", msg);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "99d3a2a0930f1f63"
            ]
        ]
    },
    {
        "id": "fa05c04b3dfe6c30",
        "type": "switch",
        "z": "cdc1f90a18705388",
        "name": "",
        "property": "payload.sell",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "c38d1277082aef8d",
                "27cfa5bc35615bd2"
            ],
            [
                "1e529c0693816614",
                "43aee3dade183f4d"
            ]
        ]
    },
    {
        "id": "c38d1277082aef8d",
        "type": "file",
        "z": "cdc1f90a18705388",
        "name": "",
        "filename": "payload.filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 330,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "27cfa5bc35615bd2",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/cash/{{payload.user}}",
        "output": "str",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "290de1c0e02fbb2a"
            ]
        ]
    },
    {
        "id": "1e529c0693816614",
        "type": "change",
        "z": "cdc1f90a18705388",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origPayload.callPrice",
                "pt": "msg",
                "to": "payload.callPrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "origPayload.user",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "origPayload.putPrice",
                "pt": "msg",
                "to": "payload.putPrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "b368f0477e698ffd"
            ]
        ]
    },
    {
        "id": "290de1c0e02fbb2a",
        "type": "change",
        "z": "cdc1f90a18705388",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origPayload.salePrice",
                "pt": "msg",
                "to": "payload.salePrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 100,
        "wires": [
            [
                "51b1f178bb5c2cd4"
            ]
        ]
    },
    {
        "id": "b368f0477e698ffd",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"start\":\"/db/cash\",\"pattern\":\"{{payload.user}}\",\"files\":\"!context\"}",
        "output": "json",
        "x": 340,
        "y": 280,
        "wires": [
            [
                "88fa0787b51770ea"
            ]
        ]
    },
    {
        "id": "43aee3dade183f4d",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/positions/{{payload.user}}",
        "output": "str",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "91d86983faa26b86",
                "7bbac4ac6a5ea701"
            ]
        ]
    },
    {
        "id": "b59445efe702432d",
        "type": "file in",
        "z": "cdc1f90a18705388",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 860,
        "y": 20,
        "wires": [
            [
                "2f1caef7df3c86b2"
            ]
        ]
    },
    {
        "id": "88fa0787b51770ea",
        "type": "fs-file-lister",
        "z": "cdc1f90a18705388",
        "name": "",
        "start": "/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": false,
        "depth": 0,
        "stat": false,
        "showWarnings": true,
        "x": 340,
        "y": 320,
        "wires": [
            [
                "3b9dfa50f1cc0764"
            ]
        ]
    },
    {
        "id": "2f1caef7df3c86b2",
        "type": "json",
        "z": "cdc1f90a18705388",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 80,
        "wires": [
            [
                "ecaa1c7b44beca74"
            ]
        ]
    },
    {
        "id": "3b9dfa50f1cc0764",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"result\":\"{{payload}}\"}",
        "output": "json",
        "x": 340,
        "y": 360,
        "wires": [
            [
                "0e8365e801613808"
            ]
        ]
    },
    {
        "id": "58cb1ccd23443a2d",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/cash/{{origPayload.user}}",
        "output": "str",
        "x": 840,
        "y": 300,
        "wires": [
            [
                "de8ad167417ff714"
            ]
        ]
    },
    {
        "id": "ecaa1c7b44beca74",
        "type": "function",
        "z": "cdc1f90a18705388",
        "name": "function 7",
        "func": "// Ensure msg.payload.accountbalance is defined\nif (typeof msg.payload.accountbalance === 'number') {\n    // Calculate the new balance\n    let newBalance = msg.payload.accountbalance;\n\n    // Check and handle msg.callPrice\n    if (typeof msg.origPayload.salePrice === 'number') {\n        newBalance += 1 * msg.origPayload.salePrice;\n    }\n    // Update msg.payload.accountbalance with the new balance\n    msg.payload.accountbalance = newBalance;\n} else {\n    // Handle the case where accountbalance is not defined or not a number\n    node.error(\"payload.accountbalance is not a number\");\n}\n\n// Return the updated msg object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "25d424f6d0b7fe33"
            ]
        ]
    },
    {
        "id": "ea774107ac3984b9",
        "type": "function",
        "z": "cdc1f90a18705388",
        "name": "function 6",
        "func": "// Ensure msg.payload.accountbalance is defined\nif (typeof msg.payload.accountbalance === 'number') {\n    // Calculate the new balance\n    let newBalance = msg.payload.accountbalance;\n\n    // Check and handle msg.callPrice\n    if (typeof msg.callPrice === 'number') {\n        newBalance += -1 * msg.callPrice;\n    }\n\n    // Check and handle msg.putPrice\n    if (typeof msg.putPrice === 'number') {\n        newBalance += -1 * msg.putPrice;\n    }\n\n    // Check and handle origPayload.callPrice\n    if (msg.origPayload && typeof msg.origPayload.callPrice === 'number') {\n        newBalance += -1 * msg.origPayload.callPrice;\n    }\n\n    // Check and handle origPayload.putPrice\n    if (msg.origPayload && typeof msg.origPayload.putPrice === 'number') {\n        newBalance += -1 * msg.origPayload.putPrice;\n    }\n\n    // Update msg.payload.accountbalance with the new balance\n    msg.payload.accountbalance = newBalance;\n} else {\n    // Handle the case where accountbalance is not defined or not a number\n    node.error(\"payload.accountbalance is not a number\");\n}\n\n// Return the updated msg object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 520,
        "wires": [
            [
                "de8ad167417ff714"
            ]
        ]
    },
    {
        "id": "0e8365e801613808",
        "type": "switch",
        "z": "cdc1f90a18705388",
        "name": "",
        "property": "payload.result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Empty Folder",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "14d9255b5caa3b25"
            ],
            [
                "aa4453fd5fcb9b22"
            ]
        ]
    },
    {
        "id": "75c5147c8494a18b",
        "type": "change",
        "z": "cdc1f90a18705388",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "origPayload.user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 380,
        "wires": [
            [
                "58cb1ccd23443a2d"
            ]
        ]
    },
    {
        "id": "91d86983faa26b86",
        "type": "file",
        "z": "cdc1f90a18705388",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1260,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "83bb8fe698c2c450",
        "type": "json",
        "z": "cdc1f90a18705388",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 520,
        "wires": [
            [
                "ea774107ac3984b9"
            ]
        ]
    },
    {
        "id": "14d9255b5caa3b25",
        "type": "function",
        "z": "cdc1f90a18705388",
        "name": "function 5",
        "func": "// Check if msg.callPrice exists and is a number\nif (typeof msg.origPayload.callPrice === 'number') {\n    // Multiply callPrice by -1 and set it as msg.payload.accountbalance\n    msg.payload = {\n        accountbalance: msg.origPayload.callPrice * -1\n    };\n}\n// Check if msg.putPrice exists and is a number\nelse if (typeof msg.origPayload.putPrice === 'number') {\n    // Multiply putPrice by -1 and set it as msg.payload.accountbalance\n    msg.payload = {\n        accountbalance: msg.origPayload.putPrice * -1\n    };\n}\nelse {\n    // If neither msg.callPrice nor msg.putPrice is a valid number, throw an error\n    node.error(\"Neither msg.callPrice nor msg.putPrice is a valid number\", msg);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 320,
        "wires": [
            [
                "75c5147c8494a18b"
            ]
        ]
    },
    {
        "id": "aa4453fd5fcb9b22",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "filename",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/db/cash/{{origPayload.user}}",
        "output": "str",
        "x": 680,
        "y": 440,
        "wires": [
            [
                "c8e3071d096ba12f"
            ]
        ]
    },
    {
        "id": "c8e3071d096ba12f",
        "type": "file in",
        "z": "cdc1f90a18705388",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 740,
        "y": 480,
        "wires": [
            [
                "83bb8fe698c2c450"
            ]
        ]
    },
    {
        "id": "76b39c050cdbc3c9",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Sell Orders",
        "info": "",
        "x": 160,
        "y": 100,
        "wires": []
    },
    {
        "id": "5826e79f3f9ac701",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Delete Position",
        "info": "",
        "x": 480,
        "y": 20,
        "wires": []
    },
    {
        "id": "c1593d816a52309a",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Update Cash Balance",
        "info": "",
        "x": 1020,
        "y": 40,
        "wires": []
    },
    {
        "id": "7270425d6cfd3e16",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Buy Orders",
        "info": "",
        "x": 150,
        "y": 260,
        "wires": []
    },
    {
        "id": "e5756222b761b796",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Add Position",
        "info": "",
        "x": 750,
        "y": 160,
        "wires": []
    },
    {
        "id": "0cc3b8d74da0721c",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Lookup Account",
        "info": "",
        "x": 340,
        "y": 400,
        "wires": []
    },
    {
        "id": "e305a585608d52c2",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "New Account",
        "info": "",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "95e8f1320648772b",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Existing Account",
        "info": "",
        "x": 520,
        "y": 420,
        "wires": []
    },
    {
        "id": "c5506e7dac55c35f",
        "type": "comment",
        "z": "cdc1f90a18705388",
        "name": "Updata Cash Balance",
        "info": "",
        "x": 900,
        "y": 580,
        "wires": []
    },
    {
        "id": "fdf823862f5cb467",
        "type": "NATS JetStream Consumer",
        "z": "cdc1f90a18705388",
        "name": "",
        "server": "77ca465d2499cef7",
        "subjects": "positions.>",
        "delivery": "all",
        "stream": "ensure",
        "ensurestream": "03ce641126b3a8b5",
        "consumertype": "durable",
        "durable": "positionsdurable",
        "startseq": 0,
        "starttime": 0,
        "ack": "auto",
        "maxackpending": 2000,
        "ackwait": 10000,
        "maxworkerpending": "",
        "maxdeliver": -1,
        "payloadType": "json",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "6aab850f59f6b405",
                "b19fc723e9419df0"
            ]
        ]
    },
    {
        "id": "6aab850f59f6b405",
        "type": "function",
        "z": "cdc1f90a18705388",
        "name": "function 10",
        "func": "// Check if msg.payload and msg.payload.data exist and are objects\nif (msg.payload && msg.payload.data && typeof msg.payload.data === 'object') {\n    // Copy properties from msg.payload.data to msg.payload\n    for (let key in msg.payload.data) {\n        if (msg.payload.data.hasOwnProperty(key)) {\n            msg.payload[key] = msg.payload.data[key];\n        }\n    }\n    // Remove the original data object from msg.payload\n    delete msg.payload.data;\n} else {\n    node.error(\"msg.payload.data is not an object\", msg);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 340,
        "wires": [
            [
                "fa05c04b3dfe6c30"
            ]
        ]
    },
    {
        "id": "b19fc723e9419df0",
        "type": "NATS JetStream Acknowledge",
        "z": "cdc1f90a18705388",
        "name": "",
        "action": "ack",
        "x": 290,
        "y": 520,
        "wires": []
    },
    {
        "id": "51b1f178bb5c2cd4",
        "type": "change",
        "z": "cdc1f90a18705388",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origPayload.user",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 60,
        "wires": [
            [
                "b59445efe702432d"
            ]
        ]
    },
    {
        "id": "25d424f6d0b7fe33",
        "type": "change",
        "z": "cdc1f90a18705388",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "origPayload.user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 140,
        "wires": [
            [
                "de8ad167417ff714"
            ]
        ]
    },
    {
        "id": "de8ad167417ff714",
        "type": "template",
        "z": "cdc1f90a18705388",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "cash/{{payload.user}}",
        "output": "str",
        "x": 1060,
        "y": 280,
        "wires": [
            [
                "c57a712fb21ca85d",
                "91d86983faa26b86"
            ]
        ]
    },
    {
        "id": "c57a712fb21ca85d",
        "type": "mqtt out",
        "z": "cdc1f90a18705388",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2603a383d6b1e7d9",
        "x": 1250,
        "y": 320,
        "wires": []
    },
    {
        "id": "7bbac4ac6a5ea701",
        "type": "link out",
        "z": "cdc1f90a18705388",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "6779de3b1bc2d68e"
        ],
        "x": 835,
        "y": 240,
        "wires": []
    },
    {
        "id": "de3c14f3e1d94db8",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origPayload.user",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "origPayload.buyorsell",
                "pt": "msg",
                "to": "payload.buyorsell",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 320,
        "wires": [
            [
                "80e9cf9d716bccd0"
            ]
        ]
    },
    {
        "id": "e0b8555039341ef5",
        "type": "switch",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "property": "payload.buyorsell",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "buy",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sell",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "b5ab9e6f450f992c"
            ],
            [
                "de3c14f3e1d94db8"
            ],
            []
        ]
    },
    {
        "id": "80e9cf9d716bccd0",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"start\":\"/db/positions\",\"pattern\":\"{{payload.user}}\",\"files\":\"!context\"}",
        "output": "json",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "eafd4a51eb957c4d"
            ]
        ]
    },
    {
        "id": "b5ab9e6f450f992c",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "payload.type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "buyorsell",
                "pt": "msg",
                "to": "payload.buyorsell",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "a582c1ee7faf17c5"
            ]
        ]
    },
    {
        "id": "eafd4a51eb957c4d",
        "type": "fs-file-lister",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "start": "/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": false,
        "depth": 0,
        "stat": false,
        "showWarnings": true,
        "x": 400,
        "y": 400,
        "wires": [
            [
                "9a18f07edcaf40e6"
            ]
        ]
    },
    {
        "id": "a582c1ee7faf17c5",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"start\":\"/db/positions\",\"pattern\":\"{{payload.user}}\",\"files\":\"!context\"}",
        "output": "json",
        "x": 420,
        "y": 140,
        "wires": [
            [
                "3487487b5d61cf75"
            ]
        ]
    },
    {
        "id": "9a18f07edcaf40e6",
        "type": "switch",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "property": "payload.result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Empty Folder",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 400,
        "wires": [
            [],
            [
                "f3b44ef9d1e1fb6d"
            ]
        ]
    },
    {
        "id": "3487487b5d61cf75",
        "type": "fs-file-lister",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "start": "/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": false,
        "depth": 0,
        "stat": false,
        "showWarnings": true,
        "x": 420,
        "y": 100,
        "wires": [
            [
                "55791fe413b4a18f"
            ]
        ]
    },
    {
        "id": "f3b44ef9d1e1fb6d",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "b9a6b7fe08ddaf11"
            ]
        ]
    },
    {
        "id": "55791fe413b4a18f",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"result\":\"{{payload}}\"}",
        "output": "json",
        "x": 420,
        "y": 60,
        "wires": [
            [
                "44874a8531eaf327"
            ]
        ]
    },
    {
        "id": "b9a6b7fe08ddaf11",
        "type": "file in",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 460,
        "y": 500,
        "wires": [
            [
                "9a1fa100ce09a407",
                "bea9843f58a9f9c4"
            ]
        ]
    },
    {
        "id": "44874a8531eaf327",
        "type": "switch",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "property": "payload.result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Empty Folder",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "ffddef04f7e707fe"
            ],
            []
        ]
    },
    {
        "id": "9a1fa100ce09a407",
        "type": "json",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 540,
        "wires": [
            [
                "d9f0a381e88a8a32"
            ]
        ]
    },
    {
        "id": "bea9843f58a9f9c4",
        "type": "file",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 810,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ffddef04f7e707fe",
        "type": "switch",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "call",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "put",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "556514588a4a2ee1"
            ],
            [
                "fe254a0cecf1b3b1"
            ],
            []
        ]
    },
    {
        "id": "d9f0a381e88a8a32",
        "type": "switch",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "property": "payload.callorput",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "call",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "put",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 540,
        "wires": [
            [
                "4cf2b9bda6e93b1e"
            ],
            [
                "5a1c381e29117a50"
            ],
            []
        ]
    },
    {
        "id": "556514588a4a2ee1",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.riskFreeRate",
                "pt": "msg",
                "to": ".05",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.volatility",
                "pt": "msg",
                "to": ".25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.term",
                "pt": "msg",
                "to": ".125",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "strikePrice",
                "pt": "msg",
                "to": "payload.strikePrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 160,
        "wires": [
            [
                "bd1e0f49941e3899"
            ]
        ]
    },
    {
        "id": "fe254a0cecf1b3b1",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.riskFreeRate",
                "pt": "msg",
                "to": ".05",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.volatility",
                "pt": "msg",
                "to": ".25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.term",
                "pt": "msg",
                "to": ".125",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "strikePrice",
                "pt": "msg",
                "to": "payload.strikePrice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 240,
        "wires": [
            [
                "d6615fcc8db151d1"
            ]
        ]
    },
    {
        "id": "4cf2b9bda6e93b1e",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.riskFreeRate",
                "pt": "msg",
                "to": ".05",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.volatility",
                "pt": "msg",
                "to": ".25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.term",
                "pt": "msg",
                "to": ".125",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 500,
        "wires": [
            [
                "959edd9ecef1ddd0"
            ]
        ]
    },
    {
        "id": "5a1c381e29117a50",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.currentPrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.riskFreeRate",
                "pt": "msg",
                "to": ".05",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.volatility",
                "pt": "msg",
                "to": ".25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.term",
                "pt": "msg",
                "to": ".125",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 580,
        "wires": [
            [
                "e37690cf9d45aa24"
            ]
        ]
    },
    {
        "id": "bd1e0f49941e3899",
        "type": "function",
        "z": "b9fe1706e10bbbd9",
        "name": "CallPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesCallPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var callPrice = S * normcdf(d1) - K * Math.exp(-r * T) * normcdf(d2);\n    return callPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar callPrice = blackScholesCallPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { callPrice: callPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 160,
        "wires": [
            [
                "0f732439e5a70c6f"
            ]
        ]
    },
    {
        "id": "d6615fcc8db151d1",
        "type": "function",
        "z": "b9fe1706e10bbbd9",
        "name": "PutPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesPutPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var putPrice = K * Math.exp(-r * T) * normcdf(-d2) - S * normcdf(-d1);\n    return putPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar putPrice = blackScholesPutPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { putPrice: putPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 240,
        "wires": [
            [
                "7aa0748061fc9003"
            ]
        ]
    },
    {
        "id": "959edd9ecef1ddd0",
        "type": "function",
        "z": "b9fe1706e10bbbd9",
        "name": "CallPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesCallPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var callPrice = S * normcdf(d1) - K * Math.exp(-r * T) * normcdf(d2);\n    return callPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar callPrice = blackScholesCallPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { callPrice: callPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 480,
        "wires": [
            [
                "f164c838ac6d3b41"
            ]
        ]
    },
    {
        "id": "e37690cf9d45aa24",
        "type": "function",
        "z": "b9fe1706e10bbbd9",
        "name": "PutPriceFunction",
        "func": "function normcdf(x) {\n    // constants\n    var a1 = 0.254829592;\n    var a2 = -0.284496736;\n    var a3 = 1.421413741;\n    var a4 = -1.453152027;\n    var a5 = 1.061405429;\n    var p = 0.3275911;\n\n    // Save the sign of x\n    var sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    x = Math.abs(x) / Math.sqrt(2.0);\n\n    // A&S formula 7.1.26\n    var t = 1.0 / (1.0 + p * x);\n    var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return 0.5 * (1.0 + sign * y);\n}\n\nfunction blackScholesPutPrice(S, K, r, sigma, T) {\n    var d1 = (Math.log(S / K) + (r + Math.pow(sigma, 2) / 2) * T) / (sigma * Math.sqrt(T));\n    var d2 = d1 - sigma * Math.sqrt(T);\n\n    var putPrice = K * Math.exp(-r * T) * normcdf(-d2) - S * normcdf(-d1);\n    return putPrice;\n}\n\nvar strikePrice = msg.payload.strikePrice;\nvar currentPrice = msg.payload.currentPrice;\nvar riskFreeRate = msg.payload.riskFreeRate;\nvar volatility = msg.payload.volatility;\nvar term = msg.payload.term;\n\nvar putPrice = blackScholesPutPrice(currentPrice, strikePrice, riskFreeRate, volatility, term);\n\nmsg.payload = { putPrice: putPrice };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "a2f5aedf817b750f"
            ]
        ]
    },
    {
        "id": "0f732439e5a70c6f",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "strikePrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "positions",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.callorput",
                "pt": "msg",
                "to": "call",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 80,
        "wires": [
            [
                "4e86b090912902b9",
                "82985b82ed4da2f2"
            ]
        ]
    },
    {
        "id": "7aa0748061fc9003",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "price",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.strikePrice",
                "pt": "msg",
                "to": "strikePrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "positions",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.callorput",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "70d10ab8af90c085",
                "82985b82ed4da2f2"
            ]
        ]
    },
    {
        "id": "f164c838ac6d3b41",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "origPayload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.salePrice",
                "pt": "msg",
                "to": "payload.callPrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.filename",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.sell",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 540,
        "wires": [
            [
                "7a6ca7b305ea7d0c",
                "82985b82ed4da2f2"
            ]
        ]
    },
    {
        "id": "a2f5aedf817b750f",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "origPayload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.salePrice",
                "pt": "msg",
                "to": "payload.putPrice",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.filename",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.sell",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 640,
        "wires": [
            [
                "2437715beffac46f",
                "82985b82ed4da2f2"
            ]
        ]
    },
    {
        "id": "4e86b090912902b9",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"type\":\"announce\",\"id\":\"frontman\",\"m\":\"{{{payload.user}}} bought {{{payload.strikePrice}}} Call @ {{{payload.callPrice}}}\"}",
        "output": "json",
        "x": 1360,
        "y": 160,
        "wires": [
            [
                "bb8a1d4e990fd772"
            ]
        ]
    },
    {
        "id": "460f036eea5135bf",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "subject",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 340,
        "wires": [
            [
                "62905d9041e1d99c"
            ]
        ]
    },
    {
        "id": "70d10ab8af90c085",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"type\":\"announce\",\"id\":\"frontman\",\"m\":\"{{{payload.user}}} bought {{{payload.strikePrice}}} Put @ {{{payload.putPrice}}}\"}",
        "output": "json",
        "x": 1420,
        "y": 200,
        "wires": [
            [
                "bb8a1d4e990fd772"
            ]
        ]
    },
    {
        "id": "7a6ca7b305ea7d0c",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"type\":\"announce\",\"id\":\"frontman\",\"m\":\"{{{payload.user}}} sold Call @ {{{payload.salePrice}}}\"}",
        "output": "json",
        "x": 1460,
        "y": 600,
        "wires": [
            [
                "458aa28268ba832d"
            ]
        ]
    },
    {
        "id": "2437715beffac46f",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"type\":\"announce\",\"id\":\"frontman\",\"m\":\"{{{payload.user}}} sold Put @ {{{payload.salePrice}}}\"}",
        "output": "json",
        "x": 1440,
        "y": 660,
        "wires": [
            [
                "458aa28268ba832d"
            ]
        ]
    },
    {
        "id": "bb8a1d4e990fd772",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "announce",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 260,
        "wires": [
            [
                "460f036eea5135bf"
            ]
        ]
    },
    {
        "id": "458aa28268ba832d",
        "type": "change",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "announce",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 480,
        "wires": [
            [
                "460f036eea5135bf"
            ]
        ]
    },
    {
        "id": "62905d9041e1d99c",
        "type": "NATS JetStream Publish",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "server": "77ca465d2499cef7",
        "subject": "",
        "payloadType": "json",
        "x": 1510,
        "y": 400,
        "wires": []
    },
    {
        "id": "5ef5d3b76c97f275",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "buy orders",
        "info": "",
        "x": 260,
        "y": 280,
        "wires": []
    },
    {
        "id": "42cf96f183cea70a",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "sell orders",
        "info": "",
        "x": 240,
        "y": 420,
        "wires": []
    },
    {
        "id": "7569d0900355f0ba",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Check for no positiion",
        "info": "",
        "x": 620,
        "y": 20,
        "wires": []
    },
    {
        "id": "aed4af83a733dd4b",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Calls",
        "info": "",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "3ae093b9ef75b93b",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Puts",
        "info": "",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "a23b14cf978d4999",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Announce Order ",
        "info": "",
        "x": 1380,
        "y": 120,
        "wires": []
    },
    {
        "id": "35f56f0af597aa94",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Send Order to Cash and Position Management",
        "info": "",
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "6a6825af615b7a8a",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Check for position",
        "info": "",
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "2dcfd0b1ed2b7097",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Calls",
        "info": "",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "7514ca04fb0cc61e",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Puts",
        "info": "",
        "x": 610,
        "y": 600,
        "wires": []
    },
    {
        "id": "883e986abd8afbb1",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "delete sold position",
        "info": "",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "52f01e366e0b5aa6",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Send Order to Cash and Position Management",
        "info": "",
        "x": 1080,
        "y": 680,
        "wires": []
    },
    {
        "id": "c9012c8fdbf1df21",
        "type": "comment",
        "z": "b9fe1706e10bbbd9",
        "name": "Announce Order ",
        "info": "",
        "x": 1460,
        "y": 720,
        "wires": []
    },
    {
        "id": "4f71e67b76274094",
        "type": "NATS JetStream Consumer",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "server": "77ca465d2499cef7",
        "subjects": "order",
        "delivery": "new",
        "stream": "ensure",
        "ensurestream": "2c11327dd23e3346",
        "consumertype": "queueGroup",
        "durable": "orderdurable",
        "startseq": 0,
        "starttime": 0,
        "ack": "manual",
        "maxackpending": 2000,
        "ackwait": 10000,
        "maxworkerpending": "",
        "maxdeliver": -1,
        "payloadType": "json",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "c539be7c791a2e44",
                "2e4752e89ae591ff"
            ]
        ]
    },
    {
        "id": "c539be7c791a2e44",
        "type": "function",
        "z": "b9fe1706e10bbbd9",
        "name": "function 9",
        "func": "// Check if msg.payload and msg.payload.data exist and are objects\nif (msg.payload && msg.payload.data && typeof msg.payload.data === 'object') {\n    // Copy properties from msg.payload.data to msg.payload\n    for (let key in msg.payload.data) {\n        if (msg.payload.data.hasOwnProperty(key)) {\n            msg.payload[key] = msg.payload.data[key];\n        }\n    }\n    // Remove the original data object from msg.payload\n    delete msg.payload.data;\n} else {\n    node.error(\"msg.payload.data is not an object\", msg);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 100,
        "wires": [
            [
                "e0b8555039341ef5"
            ]
        ]
    },
    {
        "id": "2e4752e89ae591ff",
        "type": "NATS JetStream Acknowledge",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "action": "ack",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "82985b82ed4da2f2",
        "type": "template",
        "z": "b9fe1706e10bbbd9",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "positions.{{payload.user}}",
        "output": "str",
        "x": 1260,
        "y": 360,
        "wires": [
            [
                "460f036eea5135bf"
            ]
        ]
    },
    {
        "id": "affeeeeb3e49b35c",
        "type": "mqtt out",
        "z": "20146b04c8e6e589",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2603a383d6b1e7d9",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "431afaa832c526f1",
        "type": "inject",
        "z": "20146b04c8e6e589",
        "name": "Call Order",
        "props": [
            {
                "p": "payload.type",
                "v": "call",
                "vt": "str"
            },
            {
                "p": "payload.user",
                "v": "bapley",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.buyorsell",
                "v": "buy",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "order",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "affeeeeb3e49b35c"
            ]
        ]
    },
    {
        "id": "e0e3e317b4e07809",
        "type": "inject",
        "z": "20146b04c8e6e589",
        "name": "Put Order",
        "props": [
            {
                "p": "payload.type",
                "v": "put",
                "vt": "str"
            },
            {
                "p": "payload.user",
                "v": "bapley",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.buyorsell",
                "v": "buy",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "order",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "affeeeeb3e49b35c"
            ]
        ]
    },
    {
        "id": "0d76d723651bc6f6",
        "type": "inject",
        "z": "20146b04c8e6e589",
        "name": "Sell order",
        "props": [
            {
                "p": "payload.user",
                "v": "bapley",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.buyorsell",
                "v": "sell",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "order",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "affeeeeb3e49b35c"
            ]
        ]
    }
]
